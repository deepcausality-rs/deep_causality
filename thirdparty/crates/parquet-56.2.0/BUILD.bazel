###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @@//thirdparty:crates_vendor
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_toml_env_vars")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

cargo_toml_env_vars(
    name = "cargo_toml_env_vars",
    src = "Cargo.toml",
)

rust_library(
    name = "parquet",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = False,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_root = "src/lib.rs",
    edition = "2021",
    proc_macro_deps = [
        "//thirdparty/crates/paste-1.0.15:paste",
        "//thirdparty/crates/seq-macro-0.3.6:seq_macro",
    ],
    rustc_env_files = [
        ":cargo_toml_env_vars",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=parquet",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    target_compatible_with = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [],
        "@rules_rust//rust/platform:aarch64-apple-ios": [],
        "@rules_rust//rust/platform:aarch64-apple-ios-sim": [],
        "@rules_rust//rust/platform:aarch64-linux-android": [],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:aarch64-unknown-fuchsia": [],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:aarch64-unknown-nixos-gnu": [],
        "@rules_rust//rust/platform:aarch64-unknown-nto-qnx710": [],
        "@rules_rust//rust/platform:aarch64-unknown-uefi": [],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [],
        "@rules_rust//rust/platform:armv7-linux-androideabi": [],
        "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi": [],
        "@rules_rust//rust/platform:i686-apple-darwin": [],
        "@rules_rust//rust/platform:i686-linux-android": [],
        "@rules_rust//rust/platform:i686-pc-windows-msvc": [],
        "@rules_rust//rust/platform:i686-unknown-freebsd": [],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:riscv32imc-unknown-none-elf": [],
        "@rules_rust//rust/platform:riscv64gc-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:riscv64gc-unknown-none-elf": [],
        "@rules_rust//rust/platform:s390x-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:thumbv7em-none-eabi": [],
        "@rules_rust//rust/platform:thumbv8m.main-none-eabi": [],
        "@rules_rust//rust/platform:wasm32-unknown-emscripten": [],
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [],
        "@rules_rust//rust/platform:wasm32-wasip1": [],
        "@rules_rust//rust/platform:wasm32-wasip1-threads": [],
        "@rules_rust//rust/platform:wasm32-wasip2": [],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [],
        "@rules_rust//rust/platform:x86_64-apple-ios": [],
        "@rules_rust//rust/platform:x86_64-linux-android": [],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [],
        "@rules_rust//rust/platform:x86_64-unknown-fuchsia": [],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:x86_64-unknown-nixos-gnu": [],
        "@rules_rust//rust/platform:x86_64-unknown-none": [],
        "@rules_rust//rust/platform:x86_64-unknown-uefi": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    version = "56.2.0",
    deps = [
        "//thirdparty/crates/bytes-1.10.1:bytes",
        "//thirdparty/crates/chrono-0.4.42:chrono",
        "//thirdparty/crates/half-2.6.0:half",
        "//thirdparty/crates/hashbrown-0.16.0:hashbrown",
        "//thirdparty/crates/num-0.4.3:num",
        "//thirdparty/crates/num-bigint-0.4.6:num_bigint",
        "//thirdparty/crates/thrift-0.17.0:thrift",
        "//thirdparty/crates/twox-hash-2.1.2:twox_hash",
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:aarch64-apple-ios": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:aarch64-apple-ios-sim": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:aarch64-linux-android": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-fuchsia": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-nixos-gnu": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-nto-qnx710": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-uefi": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:armv7-linux-androideabi": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:i686-apple-darwin": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:i686-linux-android": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:i686-pc-windows-msvc": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:i686-unknown-freebsd": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:riscv32imc-unknown-none-elf": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:riscv64gc-unknown-linux-gnu": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:riscv64gc-unknown-none-elf": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:s390x-unknown-linux-gnu": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:thumbv7em-none-eabi": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:thumbv8m.main-none-eabi": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:wasm32-unknown-emscripten": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(target_arch = "wasm32")
        ],
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(target_arch = "wasm32")
        ],
        "@rules_rust//rust/platform:wasm32-wasip1": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(target_arch = "wasm32")
        ],
        "@rules_rust//rust/platform:wasm32-wasip1-threads": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(target_arch = "wasm32")
        ],
        "@rules_rust//rust/platform:wasm32-wasip2": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(target_arch = "wasm32")
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-apple-ios": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-linux-android": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-fuchsia": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-nixos-gnu": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-none": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-uefi": [
            "//thirdparty/crates/ahash-0.8.12:ahash",  # cfg(not(target_arch = "wasm32"))
        ],
        "//conditions:default": [],
    }),
)
